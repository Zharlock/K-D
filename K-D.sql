-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


DROP TABLE IF EXISTS public."Agenda";

CREATE TABLE IF NOT EXISTS public."Agenda"
(
    id_agenda serial NOT NULL,
    id_pet integer,
    id_customer integer NOT NULL,
    data_begin timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    date_end timestamp without time zone,
    id_oferta integer,
    date_mark timestamp without time zone,
    PRIMARY KEY (id_agenda)
);

DROP TABLE IF EXISTS public."Ofertas";

CREATE TABLE IF NOT EXISTS public."Ofertas"
(
    id_oferta serial NOT NULL,
    tipo text,
    valor_dia integer,
    PRIMARY KEY (id_oferta)
);

DROP TABLE IF EXISTS public."Customer_type";

CREATE TABLE IF NOT EXISTS public."Customer_type"
(
    id_type serial NOT NULL,
    type text,
    PRIMARY KEY (id_type)
);

DROP TABLE IF EXISTS public."Checkin";

CREATE TABLE IF NOT EXISTS public."Checkin"
(
    id_checkin serial NOT NULL,
    id_agenda integer NOT NULL,
    date_created timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    id_enclosure integer NOT NULL,
    PRIMARY KEY (id_checkin)
);

DROP TABLE IF EXISTS public."Checkout";

CREATE TABLE IF NOT EXISTS public."Checkout"
(
    id_checkout serial NOT NULL,
    id_checkin integer NOT NULL,
    date_created timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    obs text,
    id_pay integer NOT NULL,
    id_funcionario integer NOT NULL,
    PRIMARY KEY (id_checkout)
);

DROP TABLE IF EXISTS public."Pagamento";

CREATE TABLE IF NOT EXISTS public."Pagamento"
(
    id_pay serial NOT NULL,
    payment text,
    PRIMARY KEY (id_pay)
);

DROP TABLE IF EXISTS public."Funcionario";

CREATE TABLE IF NOT EXISTS public."Funcionario"
(
    id_funcionario serial NOT NULL,
    nome text,
    cargo text,
    PRIMARY KEY (id_funcionario)
);

DROP TABLE IF EXISTS public."Customer";

CREATE TABLE IF NOT EXISTS public."Customer"
(
    id_customer serial NOT NULL,
    id_type integer NOT NULL,
    nome text,
    username text,
    email character varying(50),
    phone_number character varying(15),
    morada character varying(100),
    nif numeric,
    localidade character varying(30),
    codigo_postal character varying(15),
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    is_pet_owner boolean,
    PRIMARY KEY (id_customer)
);

DROP TABLE IF EXISTS public."Enclosure";

CREATE TABLE IF NOT EXISTS public."Enclosure"
(
    id_enclosure serial NOT NULL,
    type text,
    ocupado boolean,
    PRIMARY KEY (id_enclosure)
);

DROP TABLE IF EXISTS public."Pet";

CREATE TABLE IF NOT EXISTS public."Pet"
(
    id_pet serial NOT NULL,
    nome text,
    animal text,
    race text,
    idade integer,
    id_customer integer NOT NULL,
    id_enclosure integer NOT NULL,
    PRIMARY KEY (id_pet)
);

ALTER TABLE IF EXISTS public."Agenda"
    ADD CONSTRAINT oferta_agenda FOREIGN KEY (id_oferta)
    REFERENCES public."Ofertas" (id_oferta) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Agenda"
    ADD CONSTRAINT customer_agenda FOREIGN KEY (id_customer)
    REFERENCES public."Customer" (id_customer) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Agenda"
    ADD CONSTRAINT pet_agenda FOREIGN KEY (id_pet)
    REFERENCES public."Pet" (id_pet) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Checkin"
    ADD CONSTRAINT agenda_checkin FOREIGN KEY (id_agenda)
    REFERENCES public."Agenda" (id_agenda) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Checkin"
    ADD CONSTRAINT enclosure_checkin FOREIGN KEY (id_enclosure)
    REFERENCES public."Enclosure" (id_enclosure) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Checkout"
    ADD CONSTRAINT funcionario_checkout FOREIGN KEY (id_funcionario)
    REFERENCES public."Funcionario" (id_funcionario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Checkout"
    ADD CONSTRAINT payment_checkout FOREIGN KEY (id_pay)
    REFERENCES public."Pagamento" (id_pay) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Checkout"
    ADD CONSTRAINT checkin_checkout FOREIGN KEY (id_checkin)
    REFERENCES public."Checkin" (id_checkin) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Customer"
    ADD CONSTRAINT type_customer FOREIGN KEY (id_type)
    REFERENCES public."Customer_type" (id_type) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Pet"
    ADD CONSTRAINT pet_customer FOREIGN KEY (id_customer)
    REFERENCES public."Customer" (id_customer) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Pet"
    ADD CONSTRAINT pet_enclosure FOREIGN KEY (id_enclosure)
    REFERENCES public."Enclosure" (id_enclosure) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;