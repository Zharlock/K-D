-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public."Agenda"
(
    id_agenda serial,
    id_pet integer,
    id_customer integer NOT NULL,
    data_begin timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    date_end timestamp without time zone,
    id_oferta integer,
    date_mark timestamp without time zone,
    CONSTRAINT "Agenda_pkey" PRIMARY KEY (id_agenda)
);

CREATE TABLE IF NOT EXISTS public."Checkin"
(
    id_checkin serial,
    id_agenda integer NOT NULL,
    date_created timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    id_enclosure integer NOT NULL,
    CONSTRAINT "Checkin_pkey" PRIMARY KEY (id_checkin)
);

CREATE TABLE IF NOT EXISTS public."Checkout"
(
    id_checkout serial,
    id_checkin integer NOT NULL,
    date_created timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    obs text COLLATE pg_catalog."default",
    id_pay integer NOT NULL,
    id_funcionario integer NOT NULL,
    CONSTRAINT "Checkout_pkey" PRIMARY KEY (id_checkout)
);

CREATE TABLE IF NOT EXISTS public."Customer"
(
    id_customer serial,
    id_type integer NOT NULL,
    nome text COLLATE pg_catalog."default",
    username text COLLATE pg_catalog."default",
    email character varying(50) COLLATE pg_catalog."default",
    phone_number character varying(15) COLLATE pg_catalog."default",
    morada character varying(100) COLLATE pg_catalog."default",
    nif numeric,
    localidade character varying(30) COLLATE pg_catalog."default",
    codigo_postal character varying(15) COLLATE pg_catalog."default",
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    is_pet_owner boolean,
    CONSTRAINT "Customer_pkey" PRIMARY KEY (id_customer)
);

CREATE TABLE IF NOT EXISTS public."Customer_type"
(
    id_type serial,
    type text COLLATE pg_catalog."default",
    CONSTRAINT "Customer_type_pkey" PRIMARY KEY (id_type)
);

CREATE TABLE IF NOT EXISTS public."Enclosure"
(
    id_enclosure serial,
    type text COLLATE pg_catalog."default",
    ocupado boolean,
    CONSTRAINT "Enclosure_pkey" PRIMARY KEY (id_enclosure)
);

CREATE TABLE IF NOT EXISTS public."Funcionario"
(
    id_funcionario serial,
    nome text COLLATE pg_catalog."default",
    cargo text COLLATE pg_catalog."default",
    CONSTRAINT "Funcionario_pkey" PRIMARY KEY (id_funcionario)
);

CREATE TABLE IF NOT EXISTS public."Ofertas"
(
    id_oferta serial,
    tipo text COLLATE pg_catalog."default",
    valor_dia integer,
    CONSTRAINT "Ofertas_pkey" PRIMARY KEY (id_oferta)
);

CREATE TABLE IF NOT EXISTS public."Pagamento"
(
    id_pay serial,
    payment text COLLATE pg_catalog."default",
    CONSTRAINT "Pagamento_pkey" PRIMARY KEY (id_pay)
);

CREATE TABLE IF NOT EXISTS public."Pet"
(
    id_pet serial,
    nome text COLLATE pg_catalog."default",
    animal text COLLATE pg_catalog."default",
    race text COLLATE pg_catalog."default",
    idade integer,
    id_customer integer NOT NULL,
    id_enclosure integer NOT NULL,
    id_image integer,
    CONSTRAINT "Pet_pkey" PRIMARY KEY (id_pet)
);

CREATE TABLE IF NOT EXISTS public.image
(
    id_image serial,
    image text COLLATE pg_catalog."default" NOT NULL,
    image_tye text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT image_pkey PRIMARY KEY (id_image)
);

ALTER TABLE IF EXISTS public."Agenda"
    ADD CONSTRAINT customer_agenda FOREIGN KEY (id_customer)
    REFERENCES public."Customer" (id_customer) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Agenda"
    ADD CONSTRAINT oferta_agenda FOREIGN KEY (id_oferta)
    REFERENCES public."Ofertas" (id_oferta) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Agenda"
    ADD CONSTRAINT pet_agenda FOREIGN KEY (id_pet)
    REFERENCES public."Pet" (id_pet) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Checkin"
    ADD CONSTRAINT agenda_checkin FOREIGN KEY (id_agenda)
    REFERENCES public."Agenda" (id_agenda) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Checkin"
    ADD CONSTRAINT enclosure_checkin FOREIGN KEY (id_enclosure)
    REFERENCES public."Enclosure" (id_enclosure) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Checkout"
    ADD CONSTRAINT checkin_checkout FOREIGN KEY (id_checkin)
    REFERENCES public."Checkin" (id_checkin) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Checkout"
    ADD CONSTRAINT funcionario_checkout FOREIGN KEY (id_funcionario)
    REFERENCES public."Funcionario" (id_funcionario) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Checkout"
    ADD CONSTRAINT payment_checkout FOREIGN KEY (id_pay)
    REFERENCES public."Pagamento" (id_pay) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Customer"
    ADD CONSTRAINT type_customer FOREIGN KEY (id_type)
    REFERENCES public."Customer_type" (id_type) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Pet"
    ADD CONSTRAINT pet_customer FOREIGN KEY (id_customer)
    REFERENCES public."Customer" (id_customer) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Pet"
    ADD CONSTRAINT pet_enclosure FOREIGN KEY (id_enclosure)
    REFERENCES public."Enclosure" (id_enclosure) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Pet"
    ADD CONSTRAINT id_image FOREIGN KEY (id_image)
    REFERENCES public.image (id_image) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;